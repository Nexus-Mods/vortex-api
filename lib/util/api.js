"use strict";
// rollup module for just the modules we want to be
// part of the api
// (excluding log, which is exported separately to give
//  it a more accessible name)
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.isPathValid = exports.isFilenameValid = exports.isChildPath = exports.installIconSet = exports.github = exports.getVortexPath = exports.getVisibleWindow = exports.getReduxLog = exports.getNormalizeFunc = exports.getModType = exports.getModSources = exports.getModSource = exports.getManifest = exports.getGames = exports.getGame = exports.getDriveList = exports.getCurrentLanguage = exports.getCurrentActivator = exports.getApplication = exports.getActivator = exports.GameStoreHelper = exports.GameNotFound = exports.findModByRef = exports.findDownloadByRef = exports.fileMD5 = exports.extractExeIcon = exports.extend = exports.epicGamesLauncher = exports.deriveInstallName = exports.delay = exports.deepMerge = exports.deBOM = exports.Debouncer = exports.DataInvalid = exports.CycleError = exports.Content = exports.ConcurrencyLimiter = exports.copyRecursive = exports.copyFileAtomic = exports.convertGameIdReverse = exports.checksum = exports.Campaign = exports.calculateFolderSize = exports.bytesToString = exports.bbcodeToReact = exports.bbcodeToHTML = exports.bbcodePreProcess = exports.batchDispatch = exports.ArgumentInvalid = exports.Archive = void 0;
exports.unique = exports.toPromise = exports.toBlue = exports.testRefByIdentifiers = exports.testModReference = exports.terminate = exports.steam = exports.StarterInfo = exports.sortMods = exports.SevenZip = exports.SetupError = exports.setdefault = exports.semverCoerce = exports.Section = exports.sanitizeFilename = exports.sanitizeCSSId = exports.runThreaded = exports.runElevated = exports.resolveCategoryPath = exports.resolveCategoryName = exports.renderModReference = exports.renderModName = exports.removeMods = exports.relativeTime = exports.readExtensibleDir = exports.ReduxProp = exports.ProcessCanceled = exports.pad = exports.Overlayable = exports.opn = exports.onceCB = exports.objDiff = exports.NotSupportedError = exports.NotFound = exports.nexusModsURL = exports.nexusGameId = exports.MissingInterpreter = exports.makeUniqueByKey = exports.makeUnique = exports.makeRemoteCall = exports.makeReactive = exports.makeQueue = exports.makeOverlayableDictionary = exports.makeNormalizingDict = exports.coerceToSemver = exports.makeModReference = exports.lookupFromDownload = exports.local = exports.lazyRequire = exports.LazyComponent = void 0;
exports.CollectionsInstallationCancelledEvent = exports.CollectionsInstallationFailedEvent = exports.CollectionsInstallationCompletedEvent = exports.CollectionsInstallationStartedEvent = exports.CollectionsDownloadCancelledEvent = exports.CollectionsDownloadFailedEvent = exports.CollectionsDownloadCompletedEvent = exports.writeFileAtomic = exports.withErrorContext = exports.walk = exports.userFriendlyTime = exports.UserCanceled = void 0;
exports.getText = getText;
__exportStar(require("./message"), exports);
__exportStar(require("./storeHelper"), exports);
const Icon_1 = require("../controls/Icon");
Object.defineProperty(exports, "installIconSet", { enumerable: true, get: function () { return Icon_1.installIconSet; } });
const retrieveCategoryPath_1 = require("../extensions/category_management/util/retrieveCategoryPath");
Object.defineProperty(exports, "resolveCategoryName", { enumerable: true, get: function () { return retrieveCategoryPath_1.resolveCategoryName; } });
Object.defineProperty(exports, "resolveCategoryPath", { enumerable: true, get: function () { return retrieveCategoryPath_1.resolveCategoryPath; } });
const util_1 = require("../extensions/extension_manager/util");
Object.defineProperty(exports, "readExtensibleDir", { enumerable: true, get: function () { return util_1.readExtensibleDir; } });
const getGame_1 = require("../extensions/gamemode_management/util/getGame");
Object.defineProperty(exports, "getGame", { enumerable: true, get: function () { return getGame_1.getGame; } });
Object.defineProperty(exports, "getGames", { enumerable: true, get: function () { return getGame_1.getGames; } });
const modTypeExtensions_1 = require("../extensions/gamemode_management/util/modTypeExtensions");
Object.defineProperty(exports, "getModType", { enumerable: true, get: function () { return modTypeExtensions_1.getModType; } });
const getDriveList_1 = __importDefault(require("../extensions/gamemode_management/util/getDriveList"));
exports.getDriveList = getDriveList_1.default;
const modIdManager_1 = __importDefault(require("../extensions/mod_management/modIdManager"));
exports.deriveInstallName = modIdManager_1.default;
const activationStore_1 = require("../extensions/mod_management/util/activationStore");
Object.defineProperty(exports, "getManifest", { enumerable: true, get: function () { return activationStore_1.getManifest; } });
const dependencies_1 = require("../extensions/mod_management/util/dependencies");
Object.defineProperty(exports, "findDownloadByRef", { enumerable: true, get: function () { return dependencies_1.findDownloadByRef; } });
Object.defineProperty(exports, "findModByRef", { enumerable: true, get: function () { return dependencies_1.findModByRef; } });
Object.defineProperty(exports, "lookupFromDownload", { enumerable: true, get: function () { return dependencies_1.lookupFromDownload; } });
const deploymentMethods_1 = require("../extensions/mod_management/util/deploymentMethods");
Object.defineProperty(exports, "getActivator", { enumerable: true, get: function () { return deploymentMethods_1.getActivator; } });
Object.defineProperty(exports, "getCurrentActivator", { enumerable: true, get: function () { return deploymentMethods_1.getCurrentActivator; } });
const modName_1 = __importStar(require("../extensions/mod_management/util/modName"));
exports.renderModName = modName_1.default;
Object.defineProperty(exports, "renderModReference", { enumerable: true, get: function () { return modName_1.renderModReference; } });
const modReference_1 = require("../extensions/mod_management/util/modReference");
Object.defineProperty(exports, "makeModReference", { enumerable: true, get: function () { return modReference_1.makeModReference; } });
const modSource_1 = require("../extensions/mod_management/util/modSource");
Object.defineProperty(exports, "getModSource", { enumerable: true, get: function () { return modSource_1.getModSource; } });
Object.defineProperty(exports, "getModSources", { enumerable: true, get: function () { return modSource_1.getModSources; } });
const removeMods_1 = require("../extensions/mod_management/util/removeMods");
Object.defineProperty(exports, "removeMods", { enumerable: true, get: function () { return removeMods_1.removeMods; } });
const sort_1 = __importStar(require("../extensions/mod_management/util/sort"));
exports.sortMods = sort_1.default;
Object.defineProperty(exports, "CycleError", { enumerable: true, get: function () { return sort_1.CycleError; } });
const testModReference_1 = __importStar(require("../extensions/mod_management/util/testModReference"));
exports.testModReference = testModReference_1.default;
Object.defineProperty(exports, "coerceToSemver", { enumerable: true, get: function () { return testModReference_1.coerceToSemver; } });
Object.defineProperty(exports, "testRefByIdentifiers", { enumerable: true, get: function () { return testModReference_1.testRefByIdentifiers; } });
const convertGameId_1 = require("../extensions/nexus_integration/util/convertGameId");
Object.defineProperty(exports, "convertGameIdReverse", { enumerable: true, get: function () { return convertGameId_1.convertGameIdReverse; } });
Object.defineProperty(exports, "nexusGameId", { enumerable: true, get: function () { return convertGameId_1.nexusGameId; } });
const GameStoreHelper_1 = __importDefault(require("../util/GameStoreHelper"));
exports.GameStoreHelper = GameStoreHelper_1.default;
const application_1 = require("./application");
Object.defineProperty(exports, "getApplication", { enumerable: true, get: function () { return application_1.getApplication; } });
const archives_1 = require("./archives");
Object.defineProperty(exports, "Archive", { enumerable: true, get: function () { return archives_1.Archive; } });
const bbcode_1 = __importStar(require("./bbcode"));
exports.bbcodeToReact = bbcode_1.default;
Object.defineProperty(exports, "bbcodeToHTML", { enumerable: true, get: function () { return bbcode_1.bbcodeToHTML; } });
Object.defineProperty(exports, "bbcodePreProcess", { enumerable: true, get: function () { return bbcode_1.preProcess; } });
const calculateFolderSize_1 = __importDefault(require("./calculateFolderSize"));
exports.calculateFolderSize = calculateFolderSize_1.default;
const checksum_1 = require("./checksum");
Object.defineProperty(exports, "checksum", { enumerable: true, get: function () { return checksum_1.checksum; } });
Object.defineProperty(exports, "fileMD5", { enumerable: true, get: function () { return checksum_1.fileMD5; } });
const ConcurrencyLimiter_1 = __importDefault(require("./ConcurrencyLimiter"));
exports.ConcurrencyLimiter = ConcurrencyLimiter_1.default;
const copyRecursive_1 = __importDefault(require("./copyRecursive"));
exports.copyRecursive = copyRecursive_1.default;
const CustomErrors_1 = require("./CustomErrors");
Object.defineProperty(exports, "ArgumentInvalid", { enumerable: true, get: function () { return CustomErrors_1.ArgumentInvalid; } });
Object.defineProperty(exports, "DataInvalid", { enumerable: true, get: function () { return CustomErrors_1.DataInvalid; } });
Object.defineProperty(exports, "MissingInterpreter", { enumerable: true, get: function () { return CustomErrors_1.MissingInterpreter; } });
Object.defineProperty(exports, "NotFound", { enumerable: true, get: function () { return CustomErrors_1.NotFound; } });
Object.defineProperty(exports, "NotSupportedError", { enumerable: true, get: function () { return CustomErrors_1.NotSupportedError; } });
Object.defineProperty(exports, "ProcessCanceled", { enumerable: true, get: function () { return CustomErrors_1.ProcessCanceled; } });
Object.defineProperty(exports, "SetupError", { enumerable: true, get: function () { return CustomErrors_1.SetupError; } });
Object.defineProperty(exports, "UserCanceled", { enumerable: true, get: function () { return CustomErrors_1.UserCanceled; } });
const Debouncer_1 = __importDefault(require("./Debouncer"));
exports.Debouncer = Debouncer_1.default;
const electronRemote_1 = __importDefault(require("./electronRemote"));
exports.makeRemoteCall = electronRemote_1.default;
const EpicGamesLauncher_1 = __importDefault(require("./EpicGamesLauncher"));
exports.epicGamesLauncher = EpicGamesLauncher_1.default;
const errorHandling_1 = require("./errorHandling");
Object.defineProperty(exports, "getVisibleWindow", { enumerable: true, get: function () { return errorHandling_1.getVisibleWindow; } });
Object.defineProperty(exports, "terminate", { enumerable: true, get: function () { return errorHandling_1.terminate; } });
Object.defineProperty(exports, "withErrorContext", { enumerable: true, get: function () { return errorHandling_1.withContext; } });
const exeIcon_1 = __importDefault(require("./exeIcon"));
exports.extractExeIcon = exeIcon_1.default;
const ExtensionProvider_1 = require("./ExtensionProvider");
Object.defineProperty(exports, "extend", { enumerable: true, get: function () { return ExtensionProvider_1.extend; } });
const fsAtomic_1 = require("./fsAtomic");
Object.defineProperty(exports, "copyFileAtomic", { enumerable: true, get: function () { return fsAtomic_1.copyFileAtomic; } });
Object.defineProperty(exports, "writeFileAtomic", { enumerable: true, get: function () { return fsAtomic_1.writeFileAtomic; } });
const getNormalizeFunc_1 = __importStar(require("./getNormalizeFunc"));
exports.getNormalizeFunc = getNormalizeFunc_1.default;
Object.defineProperty(exports, "makeNormalizingDict", { enumerable: true, get: function () { return getNormalizeFunc_1.makeNormalizingDict; } });
const getVortexPath_1 = __importDefault(require("./getVortexPath"));
exports.getVortexPath = getVortexPath_1.default;
const github_1 = __importDefault(require("./github"));
exports.github = github_1.default;
const i18n_1 = require("./i18n");
Object.defineProperty(exports, "getCurrentLanguage", { enumerable: true, get: function () { return i18n_1.getCurrentLanguage; } });
const LazyComponent_1 = __importDefault(require("./LazyComponent"));
exports.LazyComponent = LazyComponent_1.default;
const lazyRequire_1 = __importDefault(require("./lazyRequire"));
exports.lazyRequire = lazyRequire_1.default;
const local_1 = __importDefault(require("./local"));
exports.local = local_1.default;
const makeReactive_1 = __importDefault(require("./makeReactive"));
exports.makeReactive = makeReactive_1.default;
const onceCB_1 = __importDefault(require("./onceCB"));
exports.onceCB = onceCB_1.default;
const opn_1 = __importDefault(require("./opn"));
exports.opn = opn_1.default;
const reduxLogger_1 = require("./reduxLogger");
Object.defineProperty(exports, "getReduxLog", { enumerable: true, get: function () { return reduxLogger_1.getReduxLog; } });
const ReduxProp_1 = __importDefault(require("./ReduxProp"));
exports.ReduxProp = ReduxProp_1.default;
const relativeTime_1 = __importStar(require("./relativeTime"));
exports.relativeTime = relativeTime_1.default;
Object.defineProperty(exports, "userFriendlyTime", { enumerable: true, get: function () { return relativeTime_1.userFriendlyTime; } });
const StarterInfo_1 = __importDefault(require("./StarterInfo"));
exports.StarterInfo = StarterInfo_1.default;
const Steam_1 = __importStar(require("./Steam"));
exports.steam = Steam_1.default;
Object.defineProperty(exports, "GameNotFound", { enumerable: true, get: function () { return Steam_1.GameNotFound; } });
const util_2 = require("./util");
Object.defineProperty(exports, "batchDispatch", { enumerable: true, get: function () { return util_2.batchDispatch; } });
Object.defineProperty(exports, "bytesToString", { enumerable: true, get: function () { return util_2.bytesToString; } });
Object.defineProperty(exports, "deBOM", { enumerable: true, get: function () { return util_2.deBOM; } });
Object.defineProperty(exports, "delay", { enumerable: true, get: function () { return util_2.delay; } });
Object.defineProperty(exports, "isChildPath", { enumerable: true, get: function () { return util_2.isChildPath; } });
Object.defineProperty(exports, "isFilenameValid", { enumerable: true, get: function () { return util_2.isFilenameValid; } });
Object.defineProperty(exports, "isPathValid", { enumerable: true, get: function () { return util_2.isPathValid; } });
Object.defineProperty(exports, "makeQueue", { enumerable: true, get: function () { return util_2.makeQueue; } });
Object.defineProperty(exports, "makeUnique", { enumerable: true, get: function () { return util_2.makeUnique; } });
Object.defineProperty(exports, "makeUniqueByKey", { enumerable: true, get: function () { return util_2.makeUniqueByKey; } });
Object.defineProperty(exports, "nexusModsURL", { enumerable: true, get: function () { return util_2.nexusModsURL; } });
Object.defineProperty(exports, "objDiff", { enumerable: true, get: function () { return util_2.objDiff; } });
Object.defineProperty(exports, "pad", { enumerable: true, get: function () { return util_2.pad; } });
Object.defineProperty(exports, "sanitizeCSSId", { enumerable: true, get: function () { return util_2.sanitizeCSSId; } });
Object.defineProperty(exports, "sanitizeFilename", { enumerable: true, get: function () { return util_2.sanitizeFilename; } });
Object.defineProperty(exports, "semverCoerce", { enumerable: true, get: function () { return util_2.semverCoerce; } });
Object.defineProperty(exports, "setdefault", { enumerable: true, get: function () { return util_2.setdefault; } });
Object.defineProperty(exports, "toBlue", { enumerable: true, get: function () { return util_2.toBlue; } });
Object.defineProperty(exports, "toPromise", { enumerable: true, get: function () { return util_2.toPromise; } });
Object.defineProperty(exports, "unique", { enumerable: true, get: function () { return util_2.unique; } });
Object.defineProperty(exports, "makeOverlayableDictionary", { enumerable: true, get: function () { return util_2.makeOverlayableDictionary; } });
const util_3 = require("./util");
Object.defineProperty(exports, "Campaign", { enumerable: true, get: function () { return util_3.Campaign; } });
Object.defineProperty(exports, "Section", { enumerable: true, get: function () { return util_3.Section; } });
Object.defineProperty(exports, "Content", { enumerable: true, get: function () { return util_3.Content; } });
Object.defineProperty(exports, "Overlayable", { enumerable: true, get: function () { return util_3.Overlayable; } });
const deepMerge_1 = __importDefault(require("./deepMerge"));
exports.deepMerge = deepMerge_1.default;
const walk_1 = __importDefault(require("./walk"));
exports.walk = walk_1.default;
const SevenZip = require("node-7z");
exports.SevenZip = SevenZip;
const vortex_run_1 = require("vortex-run");
Object.defineProperty(exports, "runElevated", { enumerable: true, get: function () { return vortex_run_1.runElevated; } });
Object.defineProperty(exports, "runThreaded", { enumerable: true, get: function () { return vortex_run_1.runThreaded; } });
const texts_1 = __importDefault(require("../extensions/mod_management/texts"));
const texts_2 = __importDefault(require("../extensions/profile_management/texts"));
const MixpanelEvents_1 = require("../extensions/analytics/mixpanel/MixpanelEvents");
Object.defineProperty(exports, "CollectionsDownloadCompletedEvent", { enumerable: true, get: function () { return MixpanelEvents_1.CollectionsDownloadCompletedEvent; } });
Object.defineProperty(exports, "CollectionsDownloadFailedEvent", { enumerable: true, get: function () { return MixpanelEvents_1.CollectionsDownloadFailedEvent; } });
Object.defineProperty(exports, "CollectionsDownloadCancelledEvent", { enumerable: true, get: function () { return MixpanelEvents_1.CollectionsDownloadCancelledEvent; } });
Object.defineProperty(exports, "CollectionsInstallationStartedEvent", { enumerable: true, get: function () { return MixpanelEvents_1.CollectionsInstallationStartedEvent; } });
Object.defineProperty(exports, "CollectionsInstallationCompletedEvent", { enumerable: true, get: function () { return MixpanelEvents_1.CollectionsInstallationCompletedEvent; } });
Object.defineProperty(exports, "CollectionsInstallationFailedEvent", { enumerable: true, get: function () { return MixpanelEvents_1.CollectionsInstallationFailedEvent; } });
Object.defineProperty(exports, "CollectionsInstallationCancelledEvent", { enumerable: true, get: function () { return MixpanelEvents_1.CollectionsInstallationCancelledEvent; } });
__exportStar(require("./network"), exports);
function getText(group, textId, t) {
    if (group === 'mod') {
        return (0, texts_1.default)(textId, t);
    }
    else if (group === 'profile') {
        return (0, texts_2.default)(textId, t);
    }
    throw new Error('invalid text group: ' + group);
}
