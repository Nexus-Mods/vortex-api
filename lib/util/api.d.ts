export * from './message';
export * from './storeHelper';
import { installIconSet } from '../controls/Icon';
import { resolveCategoryName, resolveCategoryPath } from '../extensions/category_management/util/retrieveCategoryPath';
import { readExtensibleDir } from '../extensions/extension_manager/util';
import { getGame, getGames } from '../extensions/gamemode_management/util/getGame';
import { getModType } from '../extensions/gamemode_management/util/modTypeExtensions';
import deriveModInstallName from '../extensions/mod_management/modIdManager';
import { getManifest } from '../extensions/mod_management/util/activationStore';
import { getActivator, getCurrentActivator } from '../extensions/mod_management/util/deploymentMethods';
import renderModName from '../extensions/mod_management/util/modName';
import sortMods, { CycleError } from '../extensions/mod_management/util/sort';
import testModReference from '../extensions/mod_management/util/testModReference';
import GameStoreHelper from '../util/GameStoreHelper';
import { Archive } from './archives';
import bbcodeToReact, { bbcodeToHTML } from './bbcode';
import ConcurrencyLimiter from './ConcurrencyLimiter';
import copyRecursive from './copyRecursive';
import { ArgumentInvalid, DataInvalid, MissingInterpreter, NotFound, NotSupportedError, ProcessCanceled, SetupError, UserCanceled } from './CustomErrors';
import Debouncer from './Debouncer';
import epicGamesLauncher from './EpicGamesLauncher';
import { getVisibleWindow, terminate, withContext as withErrorContext } from './errorHandling';
import { extend } from './ExtensionProvider';
import { copyFileAtomic, fileMD5, writeFileAtomic } from './fsAtomic';
import getNormalizeFunc, { makeNormalizingDict, Normalize } from './getNormalizeFunc';
import getVortexPath from './getVortexPath';
import github from './github';
import { getCurrentLanguage, TFunction } from './i18n';
import LazyComponent from './LazyComponent';
import lazyRequire from './lazyRequire';
import makeReactive from './makeReactive';
import onceCB from './onceCB';
import opn from './opn';
import { getReduxLog } from './reduxLogger';
import ReduxProp from './ReduxProp';
import relativeTime, { userFriendlyTime } from './relativeTime';
import StarterInfo from './StarterInfo';
import steam, { GameNotFound, ISteamEntry } from './Steam';
import { bytesToString, deBOM, delay, isChildPath, isFilenameValid, isPathValid, makeQueue, objDiff, pad, sanitizeCSSId, setdefault, toPromise, unique } from './util';
import walk from './walk';
import SevenZip = require('node-7z');
import { runElevated, runThreaded } from 'vortex-run';
export * from './network';
export { Archive, ArgumentInvalid, bbcodeToHTML, bbcodeToReact, bytesToString, copyFileAtomic, copyRecursive, ConcurrencyLimiter, CycleError, DataInvalid, Debouncer, deBOM, delay, deriveModInstallName as deriveInstallName, epicGamesLauncher, extend, fileMD5, GameNotFound, GameStoreHelper, getActivator, getCurrentActivator, getCurrentLanguage, getGame, getGames, getManifest, getModType, getNormalizeFunc, getReduxLog, getVisibleWindow, getVortexPath, github, installIconSet, isChildPath, isFilenameValid, isPathValid, LazyComponent, lazyRequire, makeNormalizingDict, makeQueue, makeReactive, MissingInterpreter, Normalize, NotFound, NotSupportedError, objDiff, onceCB, opn, pad, ProcessCanceled, ReduxProp, readExtensibleDir, relativeTime, renderModName, resolveCategoryName, resolveCategoryPath, runElevated, runThreaded, sanitizeCSSId, setdefault, SetupError, SevenZip, sortMods, StarterInfo, steam, ISteamEntry, terminate, testModReference, toPromise, unique, UserCanceled, userFriendlyTime, walk, withErrorContext, writeFileAtomic, };
export declare type TextGroup = 'mod';
export declare function getText(group: TextGroup, textId: string, t: TFunction): string;
